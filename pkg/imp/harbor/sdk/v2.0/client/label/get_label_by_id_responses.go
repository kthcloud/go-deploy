// Code generated by go-swagger; DO NOT EDIT.

package label

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/kthcloud/go-deploy/pkg/imp/harbor/sdk/v2.0/models"
)

// GetLabelByIDReader is a Reader for the GetLabelByID structure.
type GetLabelByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetLabelByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetLabelByIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetLabelByIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetLabelByIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetLabelByIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetLabelByIDOK creates a GetLabelByIDOK with default headers values
func NewGetLabelByIDOK() *GetLabelByIDOK {
	return &GetLabelByIDOK{}
}

/*
GetLabelByIDOK describes a response with status code 200, with default header values.

Get successfully.
*/
type GetLabelByIDOK struct {
	Payload *models.Label
}

// IsSuccess returns true when this get label by Id o k response has a 2xx status code
func (o *GetLabelByIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get label by Id o k response has a 3xx status code
func (o *GetLabelByIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get label by Id o k response has a 4xx status code
func (o *GetLabelByIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get label by Id o k response has a 5xx status code
func (o *GetLabelByIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get label by Id o k response a status code equal to that given
func (o *GetLabelByIDOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetLabelByIDOK) Error() string {
	return fmt.Sprintf("[GET /labels/{label_id}][%d] getLabelByIdOK  %+v", 200, o.Payload)
}

func (o *GetLabelByIDOK) String() string {
	return fmt.Sprintf("[GET /labels/{label_id}][%d] getLabelByIdOK  %+v", 200, o.Payload)
}

func (o *GetLabelByIDOK) GetPayload() *models.Label {
	return o.Payload
}

func (o *GetLabelByIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Label)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLabelByIDUnauthorized creates a GetLabelByIDUnauthorized with default headers values
func NewGetLabelByIDUnauthorized() *GetLabelByIDUnauthorized {
	return &GetLabelByIDUnauthorized{}
}

/*
GetLabelByIDUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetLabelByIDUnauthorized struct {

	/* The ID of the corresponding request for the response
	 */
	XRequestID string

	Payload *models.Errors
}

// IsSuccess returns true when this get label by Id unauthorized response has a 2xx status code
func (o *GetLabelByIDUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get label by Id unauthorized response has a 3xx status code
func (o *GetLabelByIDUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get label by Id unauthorized response has a 4xx status code
func (o *GetLabelByIDUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get label by Id unauthorized response has a 5xx status code
func (o *GetLabelByIDUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get label by Id unauthorized response a status code equal to that given
func (o *GetLabelByIDUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetLabelByIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /labels/{label_id}][%d] getLabelByIdUnauthorized  %+v", 401, o.Payload)
}

func (o *GetLabelByIDUnauthorized) String() string {
	return fmt.Sprintf("[GET /labels/{label_id}][%d] getLabelByIdUnauthorized  %+v", 401, o.Payload)
}

func (o *GetLabelByIDUnauthorized) GetPayload() *models.Errors {
	return o.Payload
}

func (o *GetLabelByIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-Request-Id
	hdrXRequestID := response.GetHeader("X-Request-Id")

	if hdrXRequestID != "" {
		o.XRequestID = hdrXRequestID
	}

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLabelByIDNotFound creates a GetLabelByIDNotFound with default headers values
func NewGetLabelByIDNotFound() *GetLabelByIDNotFound {
	return &GetLabelByIDNotFound{}
}

/*
GetLabelByIDNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetLabelByIDNotFound struct {

	/* The ID of the corresponding request for the response
	 */
	XRequestID string

	Payload *models.Errors
}

// IsSuccess returns true when this get label by Id not found response has a 2xx status code
func (o *GetLabelByIDNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get label by Id not found response has a 3xx status code
func (o *GetLabelByIDNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get label by Id not found response has a 4xx status code
func (o *GetLabelByIDNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get label by Id not found response has a 5xx status code
func (o *GetLabelByIDNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get label by Id not found response a status code equal to that given
func (o *GetLabelByIDNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetLabelByIDNotFound) Error() string {
	return fmt.Sprintf("[GET /labels/{label_id}][%d] getLabelByIdNotFound  %+v", 404, o.Payload)
}

func (o *GetLabelByIDNotFound) String() string {
	return fmt.Sprintf("[GET /labels/{label_id}][%d] getLabelByIdNotFound  %+v", 404, o.Payload)
}

func (o *GetLabelByIDNotFound) GetPayload() *models.Errors {
	return o.Payload
}

func (o *GetLabelByIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-Request-Id
	hdrXRequestID := response.GetHeader("X-Request-Id")

	if hdrXRequestID != "" {
		o.XRequestID = hdrXRequestID
	}

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLabelByIDInternalServerError creates a GetLabelByIDInternalServerError with default headers values
func NewGetLabelByIDInternalServerError() *GetLabelByIDInternalServerError {
	return &GetLabelByIDInternalServerError{}
}

/*
GetLabelByIDInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetLabelByIDInternalServerError struct {

	/* The ID of the corresponding request for the response
	 */
	XRequestID string

	Payload *models.Errors
}

// IsSuccess returns true when this get label by Id internal server error response has a 2xx status code
func (o *GetLabelByIDInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get label by Id internal server error response has a 3xx status code
func (o *GetLabelByIDInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get label by Id internal server error response has a 4xx status code
func (o *GetLabelByIDInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get label by Id internal server error response has a 5xx status code
func (o *GetLabelByIDInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get label by Id internal server error response a status code equal to that given
func (o *GetLabelByIDInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetLabelByIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /labels/{label_id}][%d] getLabelByIdInternalServerError  %+v", 500, o.Payload)
}

func (o *GetLabelByIDInternalServerError) String() string {
	return fmt.Sprintf("[GET /labels/{label_id}][%d] getLabelByIdInternalServerError  %+v", 500, o.Payload)
}

func (o *GetLabelByIDInternalServerError) GetPayload() *models.Errors {
	return o.Payload
}

func (o *GetLabelByIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-Request-Id
	hdrXRequestID := response.GetHeader("X-Request-Id")

	if hdrXRequestID != "" {
		o.XRequestID = hdrXRequestID
	}

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
