// Code generated by go-swagger; DO NOT EDIT.

package search

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/kthcloud/go-deploy/pkg/imp/harbor/sdk/v2.0/models"
)

// SearchReader is a Reader for the Search structure.
type SearchReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SearchReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSearchOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewSearchInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewSearchOK creates a SearchOK with default headers values
func NewSearchOK() *SearchOK {
	return &SearchOK{}
}

/*
SearchOK describes a response with status code 200, with default header values.

An array of search results
*/
type SearchOK struct {
	Payload *models.Search
}

// IsSuccess returns true when this search o k response has a 2xx status code
func (o *SearchOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this search o k response has a 3xx status code
func (o *SearchOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search o k response has a 4xx status code
func (o *SearchOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this search o k response has a 5xx status code
func (o *SearchOK) IsServerError() bool {
	return false
}

// IsCode returns true when this search o k response a status code equal to that given
func (o *SearchOK) IsCode(code int) bool {
	return code == 200
}

func (o *SearchOK) Error() string {
	return fmt.Sprintf("[GET /search][%d] searchOK  %+v", 200, o.Payload)
}

func (o *SearchOK) String() string {
	return fmt.Sprintf("[GET /search][%d] searchOK  %+v", 200, o.Payload)
}

func (o *SearchOK) GetPayload() *models.Search {
	return o.Payload
}

func (o *SearchOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Search)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchInternalServerError creates a SearchInternalServerError with default headers values
func NewSearchInternalServerError() *SearchInternalServerError {
	return &SearchInternalServerError{}
}

/*
SearchInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type SearchInternalServerError struct {

	/* The ID of the corresponding request for the response
	 */
	XRequestID string

	Payload *models.Errors
}

// IsSuccess returns true when this search internal server error response has a 2xx status code
func (o *SearchInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search internal server error response has a 3xx status code
func (o *SearchInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search internal server error response has a 4xx status code
func (o *SearchInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this search internal server error response has a 5xx status code
func (o *SearchInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this search internal server error response a status code equal to that given
func (o *SearchInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *SearchInternalServerError) Error() string {
	return fmt.Sprintf("[GET /search][%d] searchInternalServerError  %+v", 500, o.Payload)
}

func (o *SearchInternalServerError) String() string {
	return fmt.Sprintf("[GET /search][%d] searchInternalServerError  %+v", 500, o.Payload)
}

func (o *SearchInternalServerError) GetPayload() *models.Errors {
	return o.Payload
}

func (o *SearchInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-Request-Id
	hdrXRequestID := response.GetHeader("X-Request-Id")

	if hdrXRequestID != "" {
		o.XRequestID = hdrXRequestID
	}

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
