// Code generated by go-swagger; DO NOT EDIT.

package project

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/kthcloud/go-deploy/pkg/imp/harbor/sdk/v2.0/models"
)

// ListScannerCandidatesOfProjectReader is a Reader for the ListScannerCandidatesOfProject structure.
type ListScannerCandidatesOfProjectReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListScannerCandidatesOfProjectReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListScannerCandidatesOfProjectOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListScannerCandidatesOfProjectBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewListScannerCandidatesOfProjectUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListScannerCandidatesOfProjectForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewListScannerCandidatesOfProjectInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewListScannerCandidatesOfProjectOK creates a ListScannerCandidatesOfProjectOK with default headers values
func NewListScannerCandidatesOfProjectOK() *ListScannerCandidatesOfProjectOK {
	return &ListScannerCandidatesOfProjectOK{}
}

/*
ListScannerCandidatesOfProjectOK describes a response with status code 200, with default header values.

A list of scanner registrations.
*/
type ListScannerCandidatesOfProjectOK struct {

	/* Link to previous page and next page
	 */
	Link string

	/* The total count of available items
	 */
	XTotalCount int64

	Payload []*models.ScannerRegistration
}

// IsSuccess returns true when this list scanner candidates of project o k response has a 2xx status code
func (o *ListScannerCandidatesOfProjectOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list scanner candidates of project o k response has a 3xx status code
func (o *ListScannerCandidatesOfProjectOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list scanner candidates of project o k response has a 4xx status code
func (o *ListScannerCandidatesOfProjectOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list scanner candidates of project o k response has a 5xx status code
func (o *ListScannerCandidatesOfProjectOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list scanner candidates of project o k response a status code equal to that given
func (o *ListScannerCandidatesOfProjectOK) IsCode(code int) bool {
	return code == 200
}

func (o *ListScannerCandidatesOfProjectOK) Error() string {
	return fmt.Sprintf("[GET /projects/{project_name_or_id}/scanner/candidates][%d] listScannerCandidatesOfProjectOK  %+v", 200, o.Payload)
}

func (o *ListScannerCandidatesOfProjectOK) String() string {
	return fmt.Sprintf("[GET /projects/{project_name_or_id}/scanner/candidates][%d] listScannerCandidatesOfProjectOK  %+v", 200, o.Payload)
}

func (o *ListScannerCandidatesOfProjectOK) GetPayload() []*models.ScannerRegistration {
	return o.Payload
}

func (o *ListScannerCandidatesOfProjectOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Link
	hdrLink := response.GetHeader("Link")

	if hdrLink != "" {
		o.Link = hdrLink
	}

	// hydrates response header X-Total-Count
	hdrXTotalCount := response.GetHeader("X-Total-Count")

	if hdrXTotalCount != "" {
		valxTotalCount, err := swag.ConvertInt64(hdrXTotalCount)
		if err != nil {
			return errors.InvalidType("X-Total-Count", "header", "int64", hdrXTotalCount)
		}
		o.XTotalCount = valxTotalCount
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListScannerCandidatesOfProjectBadRequest creates a ListScannerCandidatesOfProjectBadRequest with default headers values
func NewListScannerCandidatesOfProjectBadRequest() *ListScannerCandidatesOfProjectBadRequest {
	return &ListScannerCandidatesOfProjectBadRequest{}
}

/*
ListScannerCandidatesOfProjectBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type ListScannerCandidatesOfProjectBadRequest struct {

	/* The ID of the corresponding request for the response
	 */
	XRequestID string

	Payload *models.Errors
}

// IsSuccess returns true when this list scanner candidates of project bad request response has a 2xx status code
func (o *ListScannerCandidatesOfProjectBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list scanner candidates of project bad request response has a 3xx status code
func (o *ListScannerCandidatesOfProjectBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list scanner candidates of project bad request response has a 4xx status code
func (o *ListScannerCandidatesOfProjectBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this list scanner candidates of project bad request response has a 5xx status code
func (o *ListScannerCandidatesOfProjectBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this list scanner candidates of project bad request response a status code equal to that given
func (o *ListScannerCandidatesOfProjectBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *ListScannerCandidatesOfProjectBadRequest) Error() string {
	return fmt.Sprintf("[GET /projects/{project_name_or_id}/scanner/candidates][%d] listScannerCandidatesOfProjectBadRequest  %+v", 400, o.Payload)
}

func (o *ListScannerCandidatesOfProjectBadRequest) String() string {
	return fmt.Sprintf("[GET /projects/{project_name_or_id}/scanner/candidates][%d] listScannerCandidatesOfProjectBadRequest  %+v", 400, o.Payload)
}

func (o *ListScannerCandidatesOfProjectBadRequest) GetPayload() *models.Errors {
	return o.Payload
}

func (o *ListScannerCandidatesOfProjectBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-Request-Id
	hdrXRequestID := response.GetHeader("X-Request-Id")

	if hdrXRequestID != "" {
		o.XRequestID = hdrXRequestID
	}

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListScannerCandidatesOfProjectUnauthorized creates a ListScannerCandidatesOfProjectUnauthorized with default headers values
func NewListScannerCandidatesOfProjectUnauthorized() *ListScannerCandidatesOfProjectUnauthorized {
	return &ListScannerCandidatesOfProjectUnauthorized{}
}

/*
ListScannerCandidatesOfProjectUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ListScannerCandidatesOfProjectUnauthorized struct {

	/* The ID of the corresponding request for the response
	 */
	XRequestID string

	Payload *models.Errors
}

// IsSuccess returns true when this list scanner candidates of project unauthorized response has a 2xx status code
func (o *ListScannerCandidatesOfProjectUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list scanner candidates of project unauthorized response has a 3xx status code
func (o *ListScannerCandidatesOfProjectUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list scanner candidates of project unauthorized response has a 4xx status code
func (o *ListScannerCandidatesOfProjectUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this list scanner candidates of project unauthorized response has a 5xx status code
func (o *ListScannerCandidatesOfProjectUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this list scanner candidates of project unauthorized response a status code equal to that given
func (o *ListScannerCandidatesOfProjectUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *ListScannerCandidatesOfProjectUnauthorized) Error() string {
	return fmt.Sprintf("[GET /projects/{project_name_or_id}/scanner/candidates][%d] listScannerCandidatesOfProjectUnauthorized  %+v", 401, o.Payload)
}

func (o *ListScannerCandidatesOfProjectUnauthorized) String() string {
	return fmt.Sprintf("[GET /projects/{project_name_or_id}/scanner/candidates][%d] listScannerCandidatesOfProjectUnauthorized  %+v", 401, o.Payload)
}

func (o *ListScannerCandidatesOfProjectUnauthorized) GetPayload() *models.Errors {
	return o.Payload
}

func (o *ListScannerCandidatesOfProjectUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-Request-Id
	hdrXRequestID := response.GetHeader("X-Request-Id")

	if hdrXRequestID != "" {
		o.XRequestID = hdrXRequestID
	}

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListScannerCandidatesOfProjectForbidden creates a ListScannerCandidatesOfProjectForbidden with default headers values
func NewListScannerCandidatesOfProjectForbidden() *ListScannerCandidatesOfProjectForbidden {
	return &ListScannerCandidatesOfProjectForbidden{}
}

/*
ListScannerCandidatesOfProjectForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ListScannerCandidatesOfProjectForbidden struct {

	/* The ID of the corresponding request for the response
	 */
	XRequestID string

	Payload *models.Errors
}

// IsSuccess returns true when this list scanner candidates of project forbidden response has a 2xx status code
func (o *ListScannerCandidatesOfProjectForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list scanner candidates of project forbidden response has a 3xx status code
func (o *ListScannerCandidatesOfProjectForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list scanner candidates of project forbidden response has a 4xx status code
func (o *ListScannerCandidatesOfProjectForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this list scanner candidates of project forbidden response has a 5xx status code
func (o *ListScannerCandidatesOfProjectForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this list scanner candidates of project forbidden response a status code equal to that given
func (o *ListScannerCandidatesOfProjectForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *ListScannerCandidatesOfProjectForbidden) Error() string {
	return fmt.Sprintf("[GET /projects/{project_name_or_id}/scanner/candidates][%d] listScannerCandidatesOfProjectForbidden  %+v", 403, o.Payload)
}

func (o *ListScannerCandidatesOfProjectForbidden) String() string {
	return fmt.Sprintf("[GET /projects/{project_name_or_id}/scanner/candidates][%d] listScannerCandidatesOfProjectForbidden  %+v", 403, o.Payload)
}

func (o *ListScannerCandidatesOfProjectForbidden) GetPayload() *models.Errors {
	return o.Payload
}

func (o *ListScannerCandidatesOfProjectForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-Request-Id
	hdrXRequestID := response.GetHeader("X-Request-Id")

	if hdrXRequestID != "" {
		o.XRequestID = hdrXRequestID
	}

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListScannerCandidatesOfProjectInternalServerError creates a ListScannerCandidatesOfProjectInternalServerError with default headers values
func NewListScannerCandidatesOfProjectInternalServerError() *ListScannerCandidatesOfProjectInternalServerError {
	return &ListScannerCandidatesOfProjectInternalServerError{}
}

/*
ListScannerCandidatesOfProjectInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type ListScannerCandidatesOfProjectInternalServerError struct {

	/* The ID of the corresponding request for the response
	 */
	XRequestID string

	Payload *models.Errors
}

// IsSuccess returns true when this list scanner candidates of project internal server error response has a 2xx status code
func (o *ListScannerCandidatesOfProjectInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list scanner candidates of project internal server error response has a 3xx status code
func (o *ListScannerCandidatesOfProjectInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list scanner candidates of project internal server error response has a 4xx status code
func (o *ListScannerCandidatesOfProjectInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this list scanner candidates of project internal server error response has a 5xx status code
func (o *ListScannerCandidatesOfProjectInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this list scanner candidates of project internal server error response a status code equal to that given
func (o *ListScannerCandidatesOfProjectInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *ListScannerCandidatesOfProjectInternalServerError) Error() string {
	return fmt.Sprintf("[GET /projects/{project_name_or_id}/scanner/candidates][%d] listScannerCandidatesOfProjectInternalServerError  %+v", 500, o.Payload)
}

func (o *ListScannerCandidatesOfProjectInternalServerError) String() string {
	return fmt.Sprintf("[GET /projects/{project_name_or_id}/scanner/candidates][%d] listScannerCandidatesOfProjectInternalServerError  %+v", 500, o.Payload)
}

func (o *ListScannerCandidatesOfProjectInternalServerError) GetPayload() *models.Errors {
	return o.Payload
}

func (o *ListScannerCandidatesOfProjectInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-Request-Id
	hdrXRequestID := response.GetHeader("X-Request-Id")

	if hdrXRequestID != "" {
		o.XRequestID = hdrXRequestID
	}

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
