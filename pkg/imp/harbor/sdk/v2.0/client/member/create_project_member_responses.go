// Code generated by go-swagger; DO NOT EDIT.

package member

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/kthcloud/go-deploy/pkg/imp/harbor/sdk/v2.0/models"
)

// CreateProjectMemberReader is a Reader for the CreateProjectMember structure.
type CreateProjectMemberReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateProjectMemberReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateProjectMemberCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateProjectMemberBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCreateProjectMemberUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateProjectMemberForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewCreateProjectMemberConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateProjectMemberInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateProjectMemberCreated creates a CreateProjectMemberCreated with default headers values
func NewCreateProjectMemberCreated() *CreateProjectMemberCreated {
	return &CreateProjectMemberCreated{}
}

/*
CreateProjectMemberCreated describes a response with status code 201, with default header values.

Project member created successfully.
*/
type CreateProjectMemberCreated struct {

	/* The URL of the created resource
	 */
	Location string
}

// IsSuccess returns true when this create project member created response has a 2xx status code
func (o *CreateProjectMemberCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create project member created response has a 3xx status code
func (o *CreateProjectMemberCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create project member created response has a 4xx status code
func (o *CreateProjectMemberCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create project member created response has a 5xx status code
func (o *CreateProjectMemberCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create project member created response a status code equal to that given
func (o *CreateProjectMemberCreated) IsCode(code int) bool {
	return code == 201
}

func (o *CreateProjectMemberCreated) Error() string {
	return fmt.Sprintf("[POST /projects/{project_name_or_id}/members][%d] createProjectMemberCreated ", 201)
}

func (o *CreateProjectMemberCreated) String() string {
	return fmt.Sprintf("[POST /projects/{project_name_or_id}/members][%d] createProjectMemberCreated ", 201)
}

func (o *CreateProjectMemberCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Location
	hdrLocation := response.GetHeader("Location")

	if hdrLocation != "" {
		o.Location = hdrLocation
	}

	return nil
}

// NewCreateProjectMemberBadRequest creates a CreateProjectMemberBadRequest with default headers values
func NewCreateProjectMemberBadRequest() *CreateProjectMemberBadRequest {
	return &CreateProjectMemberBadRequest{}
}

/*
CreateProjectMemberBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type CreateProjectMemberBadRequest struct {

	/* The ID of the corresponding request for the response
	 */
	XRequestID string

	Payload *models.Errors
}

// IsSuccess returns true when this create project member bad request response has a 2xx status code
func (o *CreateProjectMemberBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create project member bad request response has a 3xx status code
func (o *CreateProjectMemberBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create project member bad request response has a 4xx status code
func (o *CreateProjectMemberBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create project member bad request response has a 5xx status code
func (o *CreateProjectMemberBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create project member bad request response a status code equal to that given
func (o *CreateProjectMemberBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *CreateProjectMemberBadRequest) Error() string {
	return fmt.Sprintf("[POST /projects/{project_name_or_id}/members][%d] createProjectMemberBadRequest  %+v", 400, o.Payload)
}

func (o *CreateProjectMemberBadRequest) String() string {
	return fmt.Sprintf("[POST /projects/{project_name_or_id}/members][%d] createProjectMemberBadRequest  %+v", 400, o.Payload)
}

func (o *CreateProjectMemberBadRequest) GetPayload() *models.Errors {
	return o.Payload
}

func (o *CreateProjectMemberBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-Request-Id
	hdrXRequestID := response.GetHeader("X-Request-Id")

	if hdrXRequestID != "" {
		o.XRequestID = hdrXRequestID
	}

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateProjectMemberUnauthorized creates a CreateProjectMemberUnauthorized with default headers values
func NewCreateProjectMemberUnauthorized() *CreateProjectMemberUnauthorized {
	return &CreateProjectMemberUnauthorized{}
}

/*
CreateProjectMemberUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type CreateProjectMemberUnauthorized struct {

	/* The ID of the corresponding request for the response
	 */
	XRequestID string

	Payload *models.Errors
}

// IsSuccess returns true when this create project member unauthorized response has a 2xx status code
func (o *CreateProjectMemberUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create project member unauthorized response has a 3xx status code
func (o *CreateProjectMemberUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create project member unauthorized response has a 4xx status code
func (o *CreateProjectMemberUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this create project member unauthorized response has a 5xx status code
func (o *CreateProjectMemberUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this create project member unauthorized response a status code equal to that given
func (o *CreateProjectMemberUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *CreateProjectMemberUnauthorized) Error() string {
	return fmt.Sprintf("[POST /projects/{project_name_or_id}/members][%d] createProjectMemberUnauthorized  %+v", 401, o.Payload)
}

func (o *CreateProjectMemberUnauthorized) String() string {
	return fmt.Sprintf("[POST /projects/{project_name_or_id}/members][%d] createProjectMemberUnauthorized  %+v", 401, o.Payload)
}

func (o *CreateProjectMemberUnauthorized) GetPayload() *models.Errors {
	return o.Payload
}

func (o *CreateProjectMemberUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-Request-Id
	hdrXRequestID := response.GetHeader("X-Request-Id")

	if hdrXRequestID != "" {
		o.XRequestID = hdrXRequestID
	}

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateProjectMemberForbidden creates a CreateProjectMemberForbidden with default headers values
func NewCreateProjectMemberForbidden() *CreateProjectMemberForbidden {
	return &CreateProjectMemberForbidden{}
}

/*
CreateProjectMemberForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CreateProjectMemberForbidden struct {

	/* The ID of the corresponding request for the response
	 */
	XRequestID string

	Payload *models.Errors
}

// IsSuccess returns true when this create project member forbidden response has a 2xx status code
func (o *CreateProjectMemberForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create project member forbidden response has a 3xx status code
func (o *CreateProjectMemberForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create project member forbidden response has a 4xx status code
func (o *CreateProjectMemberForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create project member forbidden response has a 5xx status code
func (o *CreateProjectMemberForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create project member forbidden response a status code equal to that given
func (o *CreateProjectMemberForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *CreateProjectMemberForbidden) Error() string {
	return fmt.Sprintf("[POST /projects/{project_name_or_id}/members][%d] createProjectMemberForbidden  %+v", 403, o.Payload)
}

func (o *CreateProjectMemberForbidden) String() string {
	return fmt.Sprintf("[POST /projects/{project_name_or_id}/members][%d] createProjectMemberForbidden  %+v", 403, o.Payload)
}

func (o *CreateProjectMemberForbidden) GetPayload() *models.Errors {
	return o.Payload
}

func (o *CreateProjectMemberForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-Request-Id
	hdrXRequestID := response.GetHeader("X-Request-Id")

	if hdrXRequestID != "" {
		o.XRequestID = hdrXRequestID
	}

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateProjectMemberConflict creates a CreateProjectMemberConflict with default headers values
func NewCreateProjectMemberConflict() *CreateProjectMemberConflict {
	return &CreateProjectMemberConflict{}
}

/*
CreateProjectMemberConflict describes a response with status code 409, with default header values.

Conflict
*/
type CreateProjectMemberConflict struct {

	/* The ID of the corresponding request for the response
	 */
	XRequestID string

	Payload *models.Errors
}

// IsSuccess returns true when this create project member conflict response has a 2xx status code
func (o *CreateProjectMemberConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create project member conflict response has a 3xx status code
func (o *CreateProjectMemberConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create project member conflict response has a 4xx status code
func (o *CreateProjectMemberConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this create project member conflict response has a 5xx status code
func (o *CreateProjectMemberConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this create project member conflict response a status code equal to that given
func (o *CreateProjectMemberConflict) IsCode(code int) bool {
	return code == 409
}

func (o *CreateProjectMemberConflict) Error() string {
	return fmt.Sprintf("[POST /projects/{project_name_or_id}/members][%d] createProjectMemberConflict  %+v", 409, o.Payload)
}

func (o *CreateProjectMemberConflict) String() string {
	return fmt.Sprintf("[POST /projects/{project_name_or_id}/members][%d] createProjectMemberConflict  %+v", 409, o.Payload)
}

func (o *CreateProjectMemberConflict) GetPayload() *models.Errors {
	return o.Payload
}

func (o *CreateProjectMemberConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-Request-Id
	hdrXRequestID := response.GetHeader("X-Request-Id")

	if hdrXRequestID != "" {
		o.XRequestID = hdrXRequestID
	}

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateProjectMemberInternalServerError creates a CreateProjectMemberInternalServerError with default headers values
func NewCreateProjectMemberInternalServerError() *CreateProjectMemberInternalServerError {
	return &CreateProjectMemberInternalServerError{}
}

/*
CreateProjectMemberInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type CreateProjectMemberInternalServerError struct {

	/* The ID of the corresponding request for the response
	 */
	XRequestID string

	Payload *models.Errors
}

// IsSuccess returns true when this create project member internal server error response has a 2xx status code
func (o *CreateProjectMemberInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create project member internal server error response has a 3xx status code
func (o *CreateProjectMemberInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create project member internal server error response has a 4xx status code
func (o *CreateProjectMemberInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create project member internal server error response has a 5xx status code
func (o *CreateProjectMemberInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create project member internal server error response a status code equal to that given
func (o *CreateProjectMemberInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *CreateProjectMemberInternalServerError) Error() string {
	return fmt.Sprintf("[POST /projects/{project_name_or_id}/members][%d] createProjectMemberInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateProjectMemberInternalServerError) String() string {
	return fmt.Sprintf("[POST /projects/{project_name_or_id}/members][%d] createProjectMemberInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateProjectMemberInternalServerError) GetPayload() *models.Errors {
	return o.Payload
}

func (o *CreateProjectMemberInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-Request-Id
	hdrXRequestID := response.GetHeader("X-Request-Id")

	if hdrXRequestID != "" {
		o.XRequestID = hdrXRequestID
	}

	o.Payload = new(models.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
